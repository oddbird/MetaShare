#!/bin/bash -e

# Remember, this runs on the host, so even if the container is alpine or slim
# and may not have bash, we can assume and use bash features here.

SERVICE_NAME=web
STARTED_BACKGROUND_CONTAINER=0

function is_running {
    RUNNING=`docker-compose top $SERVICE_NAME | grep "$SERVICE_NAME"_1`
    if [[ -n "$RUNNING" ]]; then
        echo "running"
    else
        echo "not-running"
    fi
}

function dce {
    RUNNING=`is_running`
    case "$RUNNING" in
        "running")
            # XXX: I have discovered a truly marvelous bug which this margin is
            # too small to contain. But in seriousness: if the container is
            # "running" because of `docker-compose run` instead of
            # `docker-compose up`, then `docker-compose exec` will fail. For my
            # server-side purposes, I tend to not ever run `up`, only `run
            # bash`, and so this reliably fails. I should fix this!
            docker-compose exec -T $SERVICE_NAME $@
            ;;
        "not-running")
            echo "Something went wrong; are you sure the container is running?"
            return 1
            ;;
    esac
}

function clean_up {
    if [[ $STARTED_BACKGROUND_CONTAINER -eq 1 ]]; then
        echo "Stopping container in background..."
        docker-compose down
    fi
}

trap clean_up EXIT

STAGED_FILES=$(git diff --name-only --cached --diff-filter=d)

JS=()
SCSS=()
PY=()
PYI=()
TEXT=()
OTHER=()

for FILENAME in $STAGED_FILES
do
    EXTENSION="${FILENAME##*.}"

    case $EXTENSION in
        js|ts|jsx|tsx)
            JS+=($FILENAME)
            ;;
        scss)
            SCSS+=($FILENAME)
            ;;
        py)
            if [[ "$FILENAME" =~ mypy-stubs/.*\.py$ ]]; then
                printf "Do not commit .py files in mypy-stubs, only .pyi: ${FILENAME}\n"
                exit 1
            fi
            PY+=($FILENAME)
            ;;
        pyi)
            PYI+=($FILENAME)
            ;;
        json|md|yml)
            TEXT+=($FILENAME)
            ;;
        *)
            OTHER+=($FILENAME)
            ;;
    esac
done

if [[ ${#JS[@]} -ne 0 || ${#SCSS[@]} -ne 0 || ${#PY[@]} -ne 0 || ${#TEXT[@]} -ne 0 ]]; then
    RUNNING=`is_running`
    case "$RUNNING" in
        "running")
            echo "Container running, using it in background..."
            ;;
        "not-running")
            echo "Starting container in background..."
            docker-compose up --detach --no-deps $SERVICE_NAME
            STARTED_BACKGROUND_CONTAINER=1
            ;;
    esac
fi

if [[ ${#JS[@]} -ne 0 ]]; then
    dce ./node_modules/.bin/prettier --write ${JS[@]}
    dce ./node_modules/.bin/eslint --fix ${JS[@]}
    git add ${JS[@]}
fi

if [[ ${#SCSS[@]} -ne 0 ]]; then
    dce ./node_modules/.bin/stylelint --fix ${SCSS[@]}
    git add ${SCSS[@]}
fi

if [[ ${#PY[@]} -ne 0 ]]; then
    dce isort ${PY[@]}
    dce black ${PY[@]}
    dce flake8 ${PY[@]}
    git add ${PY[@]}
fi

if [[ ${#TEXT[@]} -ne 0 ]]; then
    dce ./node_modules/.bin/prettier --write ${TEXT[@]}
    git add ${TEXT[@]}
fi
