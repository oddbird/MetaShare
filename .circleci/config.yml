version: 2.1

jobs:
  build:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    steps:
      - checkout
      - restore_cache:
          keys:
            - metecho-py-{{ checksum "requirements/prod.txt" }}-{{ checksum "requirements/dev.txt" }}
      - restore_cache:
          keys:
            - metecho-npm-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            yarn install --frozen-lockfile
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/prod.txt
            pip install -r requirements/dev.txt
      - run:
          name: Compile Front-End Assets
          command: yarn prod:stats
      - persist_to_workspace:
          root: .
          paths:
            - ./webpack-stats.json
            - ./dist
            - ./venv
            - ./node_modules
      - save_cache:
          key: metecho-py-{{ checksum "requirements/prod.txt" }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - ./venv
      - save_cache:
          key: metecho-npm-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

  lint:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: |
            . venv/bin/activate
            yarn lint:nofix

  test-client:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test JS
          command: yarn test:js:coverage
      - store_artifacts:
          path: coverage
          destination: js-reports
      - store_test_results:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - coverage

  test-python:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
        environment:
          DATABASE_URL: postgres://ubuntu@localhost:5432/circle_test
          DB_ENCRYPTION_KEY: MMkDMBfYL0Xoz3Xu1ENs3AkdCZdJoks5PNlUBkK7KDc=
          DJANGO_DEBUG: False
          DJANGO_HASHID_SALT: test_hash_id
          DJANGO_SECRET_KEY: test_secret_key
          DJANGO_SETTINGS_MODULE: config.settings.test
          SECURE_SSL_REDIRECT: False
      - image: circleci/redis:latest
      - image: circleci/postgres:latest
        environment:
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: circle_test
          POSTGRES_USER: ubuntu
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run Database Migrations
          command: |
            . venv/bin/activate
            python manage.py migrate --no-input
      - run:
          name: Test Python
          command: |
            . venv/bin/activate
            pytest --junitxml=pycov/pytest-junit.xml
      - store_artifacts:
          path: htmlcov
          destination: py-reports
      - store_test_results:
          path: pycov
      - persist_to_workspace:
          root: .
          paths:
            - .coverage

  report-test-coverage:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    environment:
      COVERALLS_PARALLEL: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Report Test Coverage
          command: |
            if [ -n "${COVERALLS_REPO_TOKEN}" ]; then
              . venv/bin/activate
              yarn test:js:report-coverage
              yarn test:py:report-coverage
              curl -k "https://coveralls.io/webhook?repo_token=${COVERALLS_REPO_TOKEN}" -d "payload[build_num]=${CIRCLE_BUILD_NUM}&payload[status]=done"
            fi
      - run:
          name: Check Test Coverage
          command: |
            . venv/bin/activate
            yarn test:js:check-coverage
            yarn test:py:check-coverage

  report-webpack-stats:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    steps:
      - run:
          name: Check if packtracker.io is configured
          command: |
            if [ -z "${PT_PROJECT_TOKEN}" ]; then
                circleci-agent step halt
            fi
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install packtracker.io Plugin
          command: yarn global add @packtracker/webpack-plugin
      - run:
          name: Upload Webpack Stats to packtracker.io
          command: yarn packtracker

  build-docs:
    working_directory: ~/metecho
    docker:
      - image: oddbirds/pyjs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build Documentation
          command: |
            . venv/bin/activate
            cd docs
            make html

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test-client:
          requires:
            - build
      - test-python:
          requires:
            - build
      - build-docs:
          requires:
            - build
      - report-test-coverage:
          requires:
            - test-client
            - test-python
      - report-webpack-stats:
          requires:
            - build
